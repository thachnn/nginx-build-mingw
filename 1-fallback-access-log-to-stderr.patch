diff --git a/src/http/modules/ngx_http_log_module.c b/src/http/modules/ngx_http_log_module.c
index f7c4bd2..e6b73ce 100644
--- a/src/http/modules/ngx_http_log_module.c
+++ b/src/http/modules/ngx_http_log_module.c
@@ -1179,6 +1179,7 @@ ngx_http_log_merge_loc_conf(ngx_conf_t *cf, void *parent, void *child)
 {
     ngx_http_log_loc_conf_t *prev = parent;
     ngx_http_log_loc_conf_t *conf = child;
+    ngx_str_t               name;
 
     ngx_http_log_t            *log;
     ngx_http_log_fmt_t        *fmt;
@@ -1220,7 +1221,13 @@ ngx_http_log_merge_loc_conf(ngx_conf_t *cf, void *parent, void *child)
 
     log->file = ngx_conf_open_file(cf->cycle, &ngx_http_access_log);
     if (log->file == NULL) {
-        return NGX_CONF_ERROR;
+        // fall back to stderr
+        ngx_str_null(&name);
+        cf->cycle->log_use_stderr = 1;
+        log->file = ngx_conf_open_file(cf->cycle, &name);
+        if (log->file == NULL) {
+            return NGX_CONF_ERROR;
+        }
     }
 
     lmcf = ngx_http_conf_get_module_main_conf(cf, ngx_http_log_module);
@@ -1282,7 +1289,17 @@ ngx_http_log_set_log(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
     ngx_memzero(log, sizeof(ngx_http_log_t));
 
 
-    if (ngx_strncmp(value[1].data, "syslog:", 7) == 0) {
+    if (ngx_strcmp(value[1].data, "stderr") == 0) {
+        ngx_str_null(&name);
+        cf->cycle->log_use_stderr = 1;
+
+        log->file = ngx_conf_open_file(cf->cycle, &name);
+        if (log->file == NULL) {
+            return NGX_CONF_ERROR;
+        }
+
+        goto process_formats;
+    } else if (ngx_strncmp(value[1].data, "syslog:", 7) == 0) {
 
         peer = ngx_pcalloc(cf->pool, sizeof(ngx_syslog_peer_t));
         if (peer == NULL) {
diff --git a/src/stream/ngx_stream_log_module.c b/src/stream/ngx_stream_log_module.c
index 0ff7f42..14ddc74 100644
--- a/src/stream/ngx_stream_log_module.c
+++ b/src/stream/ngx_stream_log_module.c
@@ -1014,7 +1014,17 @@ ngx_stream_log_set_log(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
     ngx_memzero(log, sizeof(ngx_stream_log_t));
 
 
-    if (ngx_strncmp(value[1].data, "syslog:", 7) == 0) {
+    if (ngx_strcmp(value[1].data, "stderr") == 0) {
+        ngx_str_null(&name);
+        cf->cycle->log_use_stderr = 1;
+
+        log->file = ngx_conf_open_file(cf->cycle, &name);
+        if (log->file == NULL) {
+            return NGX_CONF_ERROR;
+        }
+
+        goto process_formats;
+    } else if (ngx_strncmp(value[1].data, "syslog:", 7) == 0) {
 
         peer = ngx_pcalloc(cf->pool, sizeof(ngx_syslog_peer_t));
         if (peer == NULL) {
